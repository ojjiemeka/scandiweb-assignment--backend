<?php

error_reporting(E_ALL);
ini_set('display_errors', 1);

require_once '../../config/Database.php';


class Product
{
    // DB
    private $conn;
    private $table = 'products';

    // add types to properties
    //Product Properties
    private $id;
    private $sku;
    private $product_name;
    private $price;
    private $type;
    private $size;
    private $weight;
    private $height;
    private $width;
    private $length;

    public function startDB()
    {
        $database = new Database();
        $this->conn = $database->connect();
    }

    // Setters
    public function setId($id)
    {
        $this->id = $id;
        return $this;
    }
    public function setSku($sku)
    {
        $this->sku = $sku;
        return $this;
    }
    public function setProductName($product_name)
    {
        $this->product_name = $product_name;
        return $this;
    }
    public function setPrice($price)
    {
        $this->price = $price;
        return $this;
    }
    public function setType($type)
    {
        $this->type = $type;
        return $this;
    }
    public function setSize($size)
    {
        $this->size = $size;
        return $this;
    }
    public function setWeight($weight)
    {
        $this->weight = $weight;
        return $this;
    }
    public function setHeight($height)
    {
        $this->height = $height;
        return $this;
    }
    public function setWidth($width)
    {
        $this->width = $width;
        return $this;
    }
    public function setLength($length)
    {
        $this->length = $length;
        return $this;
    }

    // Getters
    public function getId()
    {
        return $this->id;
    }
    public function getSku()
    {
        return $this->sku;
    }
    public function getProductName()
    {
        return  $this->product_name;
    }
    public function getPrice()
    {
        return $this->price;
    }
    public function getType()
    {
        return $this->type;
    }
    public function getSize()
    {
        return $this->size;
    }
    public function getWeight()
    {
        return $this->weight;
    }
    public function getHeight()
    {
        return $this->height;
    }
    public function getWidth()
    {
        return $this->width;
    }
    public function getLength()
    {        
        return $this->length;
    }

    /**
     * It's a function that reads all the product from the database and returns them in a statement.
     * 
     * @return An object of the PDOStatement class.
     */
    public function getAllProducts()
    {
        try {
            $this->startDB();

            $sql = "SELECT * FROM $this->table";

            // statement
            $query = $this->conn->prepare($sql);

            // execute
            $query->execute();
            // $query->fetch();

            return $query;
            
        } catch (\Throwable $th) {
            //throw $th;
        }
    }

    public function create()
    {
        try {
            $this->startDB();

            $sql = "SELECT COUNT(*) FROM $this->table WHERE sku = '$this->sku'"; // use `COUNT(*)`
            $result = $this->conn->prepare($sql);
            $result->execute();
            $data = $result->fetchColumn();
            if ($data > 0) {
                throw new Exception("SKU already exists");
            }

            $query = "INSERT INTO $this->table 
            SET sku = :sku, 
                product_name = :product_name, 
                price = :price, 
                type = :type, 
                size = :size, 
                weight = :weight, 
                height = :height, 
                width = :width, 
                length = :length ";

            $product = $this->conn->prepare($query);

            $product->bindValue('sku', $this->getSku());
            $product->bindValue('product_name', $this->getProductName());
            $product->bindValue('price', $this->getPrice());
            $product->bindValue('type', $this->getType());
            $product->bindValue('size', $this->getSize());
            $product->bindValue('weight', $this->getWeight());
            $product->bindValue('height', $this->getHeight());
            $product->bindValue('width', $this->getWidth());
            $product->bindValue('length', $this->getLength());

            if (!$product->execute()) {
                throw new Exception("Product Creation Failed");
            }

            return true;
        } catch (PDOException $e) {
            echo $e->getMessage();
        }
    }

    public function find($id)
    {
        //          // query
        //          // with the result, use the setters to the set the columns
        //         // return $this;
    }


    // public function show()
    // {
    //     $query = 'SELECT * 
    //                 FROM 
    //                 ' . $this->table . ' 
    //                 WHERE id = ?';

    //     // statement
    //     $stmt = $this->conn->prepare($query);

    //     /* It's binding the parameter to the query. */
    //     $stmt->bindParam(1, $this->id);

    //     // execute
    //     $stmt->execute();

    //     $row = $stmt->fetch(PDO::FETCH_ASSOC);

    //     $this->sku = $row['sku'];
    //     $this->product_name = $row['product_name'];
    //     $this->type = $row['type'];
    //     $this->size = $row['size'];
    //     $this->weight = $row['weight'];
    //     $this->height = $row['height'];
    //     $this->width = $row['width'];
    //     $this->length = $row['length'];
    //     $this->created_at = $row['created_at'];
    // }


    // Delete Post
    public function delete()
    {
        // Create query
        $query = 'DELETE FROM ' . $this->table . ' WHERE id = :id';

        // Prepare statement
        $stmt = $this->conn->prepare($query);

        // Clean data
        $this->id = htmlspecialchars(strip_tags($this->id));

        // Bind data
        $stmt->bindParam(':id', $this->id);

        // Execute query
        if ($stmt->execute()) {
            return true;
        }

        // Print error if something goes wrong
        printf("Error: %s.\n", $stmt->error);

        return false;
    }
}
